[{"content":"I stumbled upon this problem practicing Competitive Programming on codeforces. The problem can be found here. Feel free to try it yourself \u0026#x1f604;.\nWhat I like about this problem is it does not require any specialised math or algorithms and data structures knowledge. It only requires some insight and understanding into what the question is truly asking.\nQuick summary of the problem. There are $n$ containers of water lined up, numbered from left to right from $1$ to $n$. Each container can hold any amount of water; initially the $i$-th container contains $a_i$ units of water. The sum of $a_i$ is divisible by $n$.\nYou can apply the following operation any (possibly zero) number of times: pour any amount of water from the $i$-th container to the $j$-th container, where $i$ must be less than $j$ (i.e. $i\u0026lt;j$). Any index can be chosen as $i$ or $j$ any number of times.\nDetermine whether it is possible to make the amount of water in all containers the same using this operation.\nInput First line of input contains a single integer $t$ where $(1\\leq t \\leq 10^4)$ - $t$ is the number of test cases.\nThe first line of each test case contains a single integer $n$ where $(1 \\leq n \\leq 2 \\cdot 10^5)$ - $n$ is the number of containers with water.\nThe second line of each test case contains $n$ integers $a_1,a_2,\u0026hellip;,a_n$ $0 \\leq a_i \\leq 10^9)$ - the amounts of water in the containers. It is guaranteed that the sum of $a_i$ in each test case does not exceed $2 \\cdot 10^9$. Also, the sum of $a_i$ is divisible by $n$.\nOutput Output $t$ lines, each of which is the answer to the corresponding test case. As the answer, output \u0026quot;YES\u0026quot; if it is possible to make the amount of water in all containers the same using the describe operation. Otherwise, output \u0026quot;NO\u0026quot;.\nWorking through the problem ","permalink":"http://localhost:1313/blog/posts/make-equal/","summary":"I stumbled upon this problem practicing Competitive Programming on codeforces. The problem can be found here. Feel free to try it yourself \u0026#x1f604;.\nWhat I like about this problem is it does not require any specialised math or algorithms and data structures knowledge. It only requires some insight and understanding into what the question is truly asking.\nQuick summary of the problem. There are $n$ containers of water lined up, numbered from left to right from $1$ to $n$.","title":"Make Equal"},{"content":"I initially attempted to follow the setup of mathematics in content management section of Hugo. Not knowing how it worked, I assumed I can copy and paste these configurations straight out of the box, but this did not work. I wanted to run and I wanted to run fast without first understanding the underlying architecture of Hugo\nIn comes a bit of googling and running into this article by Misha Brukman in Writing Math with Hugo. With a bit of copy + paste. Here are the results below.\n$$ \\begin{bmatrix} a \u0026 b \\\\ c \u0026 d \\\\ e \u0026 f \\\\ \\end{bmatrix} $$ $$ [ \\begin{aligned} KL(\\hat{y} || y) \u0026amp;= \\sum_{c=1}^{M}\\hat{y}_c \\log{\\frac{\\hat{y}_c}{y_c}} \\ JS(\\hat{y} || y) \u0026amp;= \\frac{1}{2}(KL(y||\\frac{y+\\hat{y}}{2}) + KL(\\hat{y}||\\frac{y+\\hat{y}}{2})) \\end{aligned} ] ] $$\n","permalink":"http://localhost:1313/blog/posts/writing-math-with-hugo/","summary":"I initially attempted to follow the setup of mathematics in content management section of Hugo. Not knowing how it worked, I assumed I can copy and paste these configurations straight out of the box, but this did not work. I wanted to run and I wanted to run fast without first understanding the underlying architecture of Hugo\nIn comes a bit of googling and running into this article by Misha Brukman in Writing Math with Hugo.","title":"Writing Math With Hugo"},{"content":"I initially created a small blog using Svelte + Firebase to generate a static website for my blog, however the development effort required to build up a static website caused too much friction. I wanted to create blog posts fast, and found Hugo to support Code blocks with syntax highlighting out of the box.\nExample Code block:\n#include\u0026lt;iostream\u0026gt; using namespace std; int main() { cout \u0026lt;\u0026lt; \u0026#34;Hello, World\u0026#34; \u0026lt;\u0026lt; endl; return 0; } Using math notations using in Markdown using LaTeX or TeX requires some configuration and research, in which I will go into in the the next blog post.\n","permalink":"http://localhost:1313/blog/posts/using-hugo/","summary":"I initially created a small blog using Svelte + Firebase to generate a static website for my blog, however the development effort required to build up a static website caused too much friction. I wanted to create blog posts fast, and found Hugo to support Code blocks with syntax highlighting out of the box.\nExample Code block:\n#include\u0026lt;iostream\u0026gt; using namespace std; int main() { cout \u0026lt;\u0026lt; \u0026#34;Hello, World\u0026#34; \u0026lt;\u0026lt; endl; return 0; } Using math notations using in Markdown using LaTeX or TeX requires some configuration and research, in which I will go into in the the next blog post.","title":"Using Hugo to generate my static blog"}]